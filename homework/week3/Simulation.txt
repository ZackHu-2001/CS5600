

Q1. 
Instruction: "python3 mlfq.py -s 1 -n 2 -j 2 -i 0 -m 25"
Result: 
    Job List:
      Job  0: startTime   0 - runTime   4 - ioFreq   8
      Job  1: startTime   0 - runTime  19 - ioFreq   3
    The Job0 would first finish its task with priority 1
    Then comes the Job1, it would first run 10 quatum in
    priority 1 then drop to priority 0. However, as 
    there is no other task, after drop to priority 1 
    it would start immediatly without delay, and finish
    its task within this 10 quatum period.

Instruction: "python3 mlfq.py -s 3 -n 2 -j 2 -i 0 -m 25"

Result:
    Job List:
      Job  0: startTime   0 - runTime   6 - ioFreq   5
      Job  1: startTime   0 - runTime   9 - ioFreq   6

    As the default quatum for queue 0 and 1 is 10, the Job 0
    would run first at priority 1 and finish its task without
    drop to priority 0. Then runs the Job 1, which would 
    finish running within priority 1 as well.

Q2.
How would you run the scheduler to reproduce each of the examples in the chapter?

For figure 8.2
"python3 mlfq.py -s 1 -n 3 -j 1 -i 0 -l 0,200,-1 -c"

For figure 8.3 (LEFT)
"python3 mlfq.py -s 1 -n 3 -j 1 -i 0 -l 0,200,-1:100,20,-1 -c"

For figure 8.3 (RIGHT)
"python3 mlfq.py -s 1 -n 3 -j 1 -i 4 -l 0,175,-1:50,25,1 -c"

For figure 8.4 (LEFT)
"python3 mlfq.py -s 1 -n 3 -j 1 -i 0 -l 0,200,-1:100,100,1 -c"
Note: here I assumed that the 